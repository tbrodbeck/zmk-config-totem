#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <150>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <60>;
            key-positions = <0 1>;
            bindings = <&kp ESCAPE>;
            require-prior-idle-ms = <120>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <19 31>;
            timeout-ms = <70>;
        };

        enter_combo {
            bindings = <&kp TAB>;
            key-positions = <13 12 11>;
            timeout-ms = <70>;
            require-prior-idle-ms = <100>;
        };

        enter_right_combo {
            bindings = <&kp ENTER>;
            key-positions = <16 18 17>;
            timeout-ms = <70>;
            require-prior-idle-ms = <100>;
        };

        tab_hold {
            bindings = <&kp TAB>;
            key-positions = <20 0>;
        };

        Tilde {
            bindings = <&kp TILDE>;
            key-positions = <24 25>;
        };

        layer2 {
            bindings = <&mo 2>;
            key-positions = <34 35>;
        };
    };

    behaviors {
        mt_left: mt_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <170>;
            flavor = "balanced";
            hold-trigger-key-positions = <26 27 16 15 5 6 7 5 6 7 8 9 15 16 17 18 19 26 27 28 29 31 5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37 32 33 34>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        mt_right: mt_right {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <170>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 4 10 11 12 13 14 20 21 22 23 24 25 2 35 36 37 3 32 33 34>;
        };

        mt_thumb: mt_thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_THUMB";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <220>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            require-prior-idle-ms = <50>;
        };

        mt_shift_left: mt_shift_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_SHIFT_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <175>;
            flavor = "hold-preferred";
            hold-trigger-key-positions = <19 26 27 29 30 31 36 37 35 36 32 33 34 5 6 7 8 9 15 16 17 18 19 26 27 28 29 31>;
        };

        mt_shift_right: mt_shift_right {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_SHIFT_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <175>;
            flavor = "hold-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34 35 36 37>;
        };

        hold_sticky: hold_sticky {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_STICKY";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <220>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
                  &kp Q           &kp W  &kp E         &kp R             &kp T          &kp Y  &kp U              &kp I          &kp O      &kp P
                  &kp A           &kp S  &kp D         &kp F             &kp G          &kp H  &kp J              &kp K          &kp L      &kp SEMICOLON
&kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp Z  &kp X         &kp C             &kp V          &kp B  &kp N              &kp M          &kp COMMA  &kp RIGHT_SHIFT  &kp BACKSPACE
                                         &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 SPACE    &mo 1  &kp RIGHT_COMMAND  &kp RIGHT_ALT
            >;
        };

        nav_layer {
            label = "NAVI";
            bindings = <
        &kp GRAVE  &kp EQUAL       &kp UP          &kp BACKSLASH    &trans      &trans     &kp N7  &kp N8        &kp N9  &kp N0
        &kp ESC    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LBKT    &kp RBKT   &kp N4  &kp NUMBER_5  &kp N6  &kp MINUS
&trans  &trans     &kp DOT         &kp APOS        &kp SLASH        &kp TAB     &kp ENTER  &kp N1  &kp N2        &kp N3  &trans     &kp DELETE
                                   &trans          &trans           &mo 2       &mo 2      &trans  &trans
            >;
        };

        sim_layer {
            label = "SYM";
            bindings = <
        &bt BT_NXT    &trans  &trans      &kp C_BRI_DN  &kp C_BRI_UP    &kp C_MUTE    &kp F7  &kp F8  &kp F9  &kp F10
        &bt BT_PRV    &trans  &trans      &trans        &trans          &kp C_VOL_UP  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &kp CAPSLOCK  &trans  &kp C_PREV  &kp C_PP      &kp C_NEXT      &kp C_VOL_DN  &kp F1  &kp F2  &kp F3  &kp F12  &trans
                              &trans      &trans        &trans          &trans        &trans  &trans
            >;
        };
    };
};
